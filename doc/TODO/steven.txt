1. Excel 导入导出。
2. 消息推送。(提醒 remind、公告 announce)
    设计消息表
    === notify:
    id          : {type: 'integer', primaryKey: true},                 // 主键
    content     : {type: 'text'},                                      // 消息的内容
    type        : {type: 'integer', required: true, enum: [1, 2, 3]},  // 消息的类型，1: 公告 Announce，2: 提醒 Remind，3：信息 Message
    target      : {type: 'integer'},                                   // 目标的ID
    targetType  : {type: 'string'},                                    // 目标的类型
    action      : {type: 'string'},                                    // 提醒信息的动作类型
    sender      : {type: 'integer'},                                   // 发送者的ID
    createdAt   : {type: 'datetime', required: true}

    示例：高总    调整了   xxx     预算方案。
          sender          target  targetType
    注意：notify 还支持存储公告和信息。它们会用到 content 字段，而不会用到 target、targetType、action 字段。

    === user_notify: 模拟用户消息队列
    id          : {type: 'integer', primaryKey: true},                 // 主键
    isRead      : {type: 'boolean', required: true},
    user        : {type: 'integer', required: true},                   // 用户消息所属者
    notify      : {type: 'integer', required: true},                   // 关联的 Notify
    createdAt   : {type: 'datetime', required: true}

    user_notify 的创建主要有两个途径:
    1. 遍历订阅表 (subscription) 拉取公告和提醒时创建。
    2. 新建消息 (message) 之后，立刻创建。

    === subscription:
    target      : {type: 'integer', required: true},   // 目标的ID
    targetType  : {type: 'string', required: true},    // 目标的类型
    action      : {type: 'string'},                    // 订阅动作,如: comment/like/post/update etc.
    user        : {type: 'integer'}，
    createdAt   : {type: 'datetime', required: true}

    订阅是从 notify 表拉取消息到 user_notify 的前提，用户首先订阅了某一个目标的某一个动作，
    在此之后产生这个目标的的动作消息，才会通知到该用户。

    示例：王总监  关注了   xxx    预算方案
          user   action   target targetType

    === subscription_config:
    action: {type: 'json', required: true},   // 用户的设置
    user: {type: 'integer'}


    员工登录后，发送未读消息，消息只推送消息标题。
    员工点击消息标题，打开消息详情，把消息置为已读。
    后台程序广播消息，直接插消息表，遍历在线工号，实时推送消息给前端。
    后台程序发送点对点消息，直接插消息表，在线工号中实时推送。



3. 分布式 XA 事务。

模板:
LocalDateTime (重要!)
新库 create_date -> create_time
单点登陆：新老系统集成。

1.系统不一定部署在公网，需要考虑针对 IP 网段做白名单限制。
2.需要在内网搭建个 SQL Server 数据库倒换过来，再做模糊化。

+--------------------+
   系统割接步骤梳理
+--------------------+
1.重新申请阿里云服务器，建新的数据库。老应用仍然部署在老主机上。
2.将老库(sys,ins,out)表结构连同数据，拖一份到新库上来。
3.修改表结构，字段名大写变小写。ID 字段 改成 BIGINT(20) unsigned
   字段大写改小写可以批量做，ID 字段改 BIGINT(20) unsigned 要提前做。
4.老应用改造，查询出来的数据，框架修改如下:
for (int i = 1; i <= colNum; i++) {
    String columnLabel = resultSet.getColumnLabel(i)
    String key = columnLabel.toUpperCase();
    String value = resultSet.getString(columnLabel);
    record.put(key, value);
}
  insert, update, delete 也要考虑是否会有大小写影响，按理说 MySQL 不区分大小写不会有影响。
  拿老工程连新库跑一下，验证下。http://39.106.228.124:8080/
    【开发环境里部署了一套老应用，sys, ins 两个数据源连的开发库，out 和 all 数据源连的 生产库。用你手机号码做了密码变更，数据修改成功。】
5.


*. 数据库自动填充，五个标准字段。
*. 数据库时间日期字段是否统一成 String？目前的问题是：前端传 String 进来不能自动绑定到 LocalTime，类型必须一致。很麻烦。
*.


# 权限设计。
# 消息中心，WebSocket。
# 通过 MAC 地址控制能否登录。
# 大型文件上传。
# 数据统计，通过后台任务来跑，日报，月报。导出 Excel 有合并单元格要求。
# 大数据练手环境。

+------------+
   权限设计
+------------+
1.岗位 -> 角色的对应关系。调用方提供岗位给我，我要告诉他对应的角色。
2.考虑可能会存在直接给某个员工赋权的情况，是否有更好的解决方案？

1.确认是不是就在 sys, ins 两个账号下新增表，或者对现有的表进行改造？
2.原先的权限是不是仅仅只对应菜单权限?
3.新的权限系统实际是将菜单权限看作一类特殊权限。
4.权限表实际上是定义的功能权限。控制界面上的按钮是否展示、某些函数是否能调用等。

-- 现有的表:
-- ins_user -- 用户表
-- ins_user_func -- 用户权限表
-- ins_org  -- 组织表
-- ins_user_role -- 用户角色表(没有使用)

-- sys_menu -- 菜单表
-- sys_func -- 权限表, 以 MENU_ 开头的都是菜单权限

-- 我设计的表:
-- user 用户表                         -> ins_user 无需调整
-- user_role 用户角色关联               -> ins_user_role
-- role 角色表                         -> ins_role
-- permission_role 角色权限关联         -> ins_func_role
-- permission 权限表                   -> sys_func 无需调整
-- menu 菜单表                         -> sys_menu 无需调整
-- menu_role 角色菜单关联               -> ins_menu_role
-- org 组织表                          -> ins_org 无需调整
-- user_org 用户组织关联

LayUI学习视频: https://www.php.cn/code/30329.html

# 将菜单看作是一种特殊的权限。
# RBAC, 一种基于角色的权限访问控制。Role-Based Access Control

# 测试数据:
    13723885094
    820311

    13787235663
    123456