server:
  port: 8080
  servlet.context-path: /hirun
  servlet:
    session:
      timeout: PT1H
      cookie:
        name: HIRUN_SID

# 日志
logging:
  level:
    root: info
    #com.atomikos.jdbc.nonxa.AtomikosThreadLocalConnection: debug
    com.atomikos: debug
    com.baomidou.dynamic.datasource: debug
    com.baomidou.mybatisplus: info
    com.microtomato.hirun: debug
    com.microtomato.hirun.framework.interceptor: info
    # 开启XA事务调试日志，方便查找问题。
    org.springframework.transaction.jta.JtaTransactionManager: debug
    org.mybatis.spring.transaction.SpringManagedTransaction: debug
    com.atomikos.jdbc.AtomikosConnectionProxy: debug
    com.atomikos.icatch.imp.CompositeTransactionImp: debug
    com.atomikos.datasource.xa.XAResourceTransaction: debug

# 是否为生产模式
production.mode: false

spring:
  datasource:
    atomikos:
      sys:
#        uniqueResourceName: sys
#        driverClassName: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://39.106.228.124:3306/sys?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
#        user: sys
#        password: ENC(kOszr+P7A1igBzGeAY/bpx0ZLffsMGc/)
#        minPoolSize: 2
#        maxPoolSize: 5
#        maxIdleTime: 60
#        maxLifetime: 1200
#        testQuery: SELECT 1
#        maintenanceInterval: 60

        unique-resource-name: sys
        min-pool-size: 2
        max-pool-size: 5
        max-lifetime: 20000
        borrow-connection-timeout: 10000
        xa-data-source-class-name: com.alibaba.druid.pool.xa.DruidXADataSource
        xa-properties:
          url: jdbc:mysql://39.106.228.124:3306/sys?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
          username: sys
          password: ENC(kOszr+P7A1igBzGeAY/bpx0ZLffsMGc/)
          driverClassName: com.mysql.cj.jdbc.Driver
          initialSize: 2
          minIdle: 2
          maxActive: 5
          maxWait: 60000
          timeBetweenEvictionRunsMillis: 30000
          minEvictableIdleTimeMillis: 300000
          numTestsPerEvictionRun: 2
          testWhileIdle: true
          testOnBorrow: false
          testOnReturn: false
          poolPreparedStatements: true
          validationQuery: select 1
          maxPoolPreparedStatementPerConnectionSize: 20
          filters: stat,slf4j,wall



      ins:
#        uniqueResourceName: ins
#        driverClassName: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://39.106.228.124:3306/ins?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
#        user: ins
#        password: ENC(iLNwZcUXiXjVM2TOiymyEwsRUeZMnFKY)
#        minPoolSize: 2
#        maxPoolSize: 5
#        maxIdleTime: 60
#        maxLifetime: 1200
#        testQuery: SELECT 1
#        maintenanceInterval: 60

        unique-resource-name: ins
        min-pool-size: 2
        max-pool-size: 5
        max-lifetime: 20000
        borrow-connection-timeout: 10000
        xa-data-source-class-name: com.alibaba.druid.pool.xa.DruidXADataSource
        xa-properties:
          url: jdbc:mysql://39.106.228.124:3306/ins?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
          username: ins
          password: ENC(iLNwZcUXiXjVM2TOiymyEwsRUeZMnFKY)
          driverClassName: com.mysql.cj.jdbc.Driver
          initialSize: 2
          minIdle: 2
          maxActive: 5
          maxWait: 60000
          timeBetweenEvictionRunsMillis: 30000
          minEvictableIdleTimeMillis: 300000
          numTestsPerEvictionRun: 2
          testWhileIdle: true
          testOnBorrow: false
          testOnReturn: false
          poolPreparedStatements: true
          validationQuery: select 1
          maxPoolPreparedStatementPerConnectionSize: 20
          filters: stat,slf4j,wall


  cache:
    # 指定缓存类型: none(禁用缓存), simple(用于开发), redis（用于生产）
    type: simple

  redis:
    timeout: 1000
    host: 127.0.0.1
    port: 6379

  # thymeleaf 模板配置
  thymeleaf:
    cache: false # 开发模式下设置为 false，避免改了模板还要重启服务器，线上设置为 true，可以提高性能。

  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
      exclude: static/**

  session:
    # session 的存储方式，开发模式（本地）：none，生产模式（分布式缓存）：redis
    store-type: none
    timeout: 1800